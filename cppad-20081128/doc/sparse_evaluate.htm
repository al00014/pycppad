<html><head>
<title>Evaluate a Function That Has a Sparse Hessian</title>
<meta name="description" id="description" content="Evaluate a Function That Has a Sparse Hessian">
<meta name="keywords" id="keywords" content=" sparse_evaluate function ">
<style type='text/css'>
BODY { color : black }
BODY { background-color : white }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_evaluate_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>speed</option>
<option>speed_utility</option>
<option>sparse_evaluate</option>
</select>
</td>
<td><a href="ode_evaluate.hpp.htm" target="_top">Prev</a>
</td><td><a href="sparse_evaluate.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>Appendix-&gt;</option>
<option>Faq</option>
<option>speed</option>
<option>Theory</option>
<option>glossary</option>
<option>Bib</option>
<option>Bugs</option>
<option>WishList</option>
<option>whats_new</option>
<option>include_deprecated</option>
<option>License</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>speed-&gt;</option>
<option>speed_main</option>
<option>speed_utility</option>
<option>speed_double</option>
<option>speed_adolc</option>
<option>speed_cppad</option>
<option>speed_fadbad</option>
<option>speed_sacado</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>speed_utility-&gt;</option>
<option>uniform_01</option>
<option>det_of_minor</option>
<option>det_by_minor</option>
<option>det_by_lu</option>
<option>det_33</option>
<option>det_grad_33</option>
<option>ode_evaluate</option>
<option>sparse_evaluate</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>sparse_evaluate-&gt;</option>
<option>sparse_evaluate.cpp</option>
<option>sparse_evaluate.hpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>Inclusion</option>
<option>Float</option>
<option>x</option>
<option>i</option>
<option>j</option>
<option>m</option>
<option>fm</option>
<option>---..Function</option>
<option>---..Gradient</option>
<option>---..Hessian</option>
<option>Example</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br>



<center><b><big><big>Evaluate a Function That Has a Sparse Hessian</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#&nbsp;include&nbsp;&lt;cppad/speed/sparse_evaluate.hpp&gt;<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>sparse_evaluate(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fm</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This routine evaluates
<code>
<span style='white-space: nowrap'>&nbsp;f(x)</span></code>
, <code>
<span style='white-space: nowrap'>&nbsp;f^{(1)}&nbsp;(x)</span></code>
, or <code>
<span style='white-space: nowrap'>&nbsp;f^{(2)}&nbsp;(x)</span></code>

where the Hessian <code>
<span style='white-space: nowrap'>&nbsp;f^{(2)}&nbsp;(x)</span></code>
 is sparse.
The function <code>
<span style='white-space: nowrap'>&nbsp;f&nbsp;:&nbsp;\R^n&nbsp;\rightarrow&nbsp;\R</span></code>
 depends on the 
index vectors 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
. 
The only non-zero entries in the Hessian of this function have the form
\[
	\DD{f}{x[k]]}{x[j[k]}
\]
for some \( k \) between zero and \( \ell-1 \).

<br>
<br>
<b><big><a name="Inclusion" id="Inclusion">Inclusion</a></big></b>
<br>
The template function <code><font color="blue">sparse_evaluate</font></code> 
is defined in the <code><font color="blue">CppAD</font></code> namespace by including 
the file <code><font color="blue">cppad/speed/sparse_evaluate.hpp</font></code> 
(relative to the CppAD distribution directory).
It is only intended for example and testing purposes, 
so it is not automatically included by
<a href="cppad.htm" target="_top"><span style='white-space: nowrap'>cppad.hpp</span></a>
.

<br>
<br>
<b><big><a name="Float" id="Float">Float</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i></code>
 must be a <a href="numerictype.htm" target="_top"><span style='white-space: nowrap'>NumericType</span></a>
.
In addition, if 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 are 
<code><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i></code>
 objects,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;exp(</span></font><i><font color="black"><span style='white-space: nowrap'>z</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
must set the 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 equal the exponential of 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
, i.e.,
the derivative of 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 with respect to 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 is equal to 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It contains he argument value for which the function,
or its derivative, is being evaluated.
We use <code>
<span style='white-space: nowrap'>&nbsp;n</span></code>
 to denote the size of the vector 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.

<br>
<br>
<b><big><a name="i" id="i">i</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;size_t&gt;&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies one of the first 
index of <code>
<span style='white-space: nowrap'>&nbsp;x</span></code>
 for each non-zero Hessian term
(see <a href="sparse_evaluate.htm#Purpose" target="_top"><span style='white-space: nowrap'>purpose</span></a>
 above).
All the elements of 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 must be between zero and 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
.
We use <code>
<span style='white-space: nowrap'>&nbsp;\ell</span></code>
 to denote the size of the vector 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
.

<br>
<br>
<b><big><a name="j" id="j">j</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;size_t&gt;&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is a vector with size <code>
<span style='white-space: nowrap'>&nbsp;\ell</span></code>
.
It specifies one of the second 
index of <code>
<span style='white-space: nowrap'>&nbsp;x</span></code>
 for each non-zero Hessian term.
All the elements of 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
 must be between zero and 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
.

<br>
<br>
<b><big><a name="m" id="m">m</a></big></b>
<br>
The argument <i>m</i> has prototype

<code><i><font color="black"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font></i><font color="blue"><span style='white-space: nowrap'>m</span></font><i><font color="black"><span style='white-space: nowrap'><br>
</span></font></i></code>
It is between zero and two and
specifies the order of the derivative of <code>
<span style='white-space: nowrap'>&nbsp;f</span></code>

that is being evaluated, i.e., <code>
<span style='white-space: nowrap'>&nbsp;f^{(m)}&nbsp;(x)</span></code>
 is evaluated.

<br>
<br>
<b><big><a name="fm" id="fm">fm</a></big></b>
<br>
The argument <i>fm</i> has prototype

<code><i><font color="black"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;</span></font></i><font color="blue"><span style='white-space: nowrap'>Float</span></font><i><font color="black"><span style='white-space: nowrap'>&gt;&nbsp;&amp;</span></font></i><font color="blue"><span style='white-space: nowrap'>fm</span></font><i><font color="black"><span style='white-space: nowrap'><br>
</span></font></i></code>
The input value of the elements of 
<code><i><font color="black"><span style='white-space: nowrap'>fm</span></font></i></code>
 does not matter.

<br>
<br>
<b><a name="fm.Function" id="fm.Function">Function</a></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
 is zero, <i>fm</i> has size one and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>fm</span></i><code><font color="blue"><span style='white-space: nowrap'>[0]</span></font></code> is the value of <code>
<span style='white-space: nowrap'>&nbsp;f(x)</span></code>
.

<br>
<br>
<b><a name="fm.Gradient" id="fm.Gradient">Gradient</a></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
 is one, <i>fm</i> has size <i>n</i> and 
for <code>
<span style='white-space: nowrap'>&nbsp;j&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>

<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\D{f}{x[j]}&nbsp;=&nbsp;fm&nbsp;[&nbsp;j&nbsp;]<br>
\]&nbsp;</span></code>


<br>
<br>
<b><a name="fm.Hessian" id="fm.Hessian">Hessian</a></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
 is two, <i>fm</i> has size <code><font color="blue"></font></code><i><span style='white-space: nowrap'>n</span></i><code><font color="blue"><span style='white-space: nowrap'>&nbsp;*&nbsp;</span></font></code><i><span style='white-space: nowrap'>n</span></i> and
for <code>
<span style='white-space: nowrap'>&nbsp;k&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>
,
<code>
<span style='white-space: nowrap'>&nbsp;m&nbsp;=&nbsp;0&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>

<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\DD{f}{x[k]}{x[m]}&nbsp;=&nbsp;fm&nbsp;[&nbsp;k&nbsp;*&nbsp;n&nbsp;+&nbsp;m&nbsp;]<br>
\]&nbsp;</span></code>




<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file
<a href="sparse_evaluate.cpp.htm" target="_top"><span style='white-space: nowrap'>sparse_evaluate.cpp</span></a>

contains an example and test  of <code><font color="blue">sparse_evaluate.hpp</font></code>.
It returns true if it succeeds and false otherwise.

<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>
<br>
The file 
<a href="sparse_evaluate.hpp.htm" target="_top"><span style='white-space: nowrap'>sparse_evaluate.hpp</span></a>

contains the source code for this template function.


<hr>Input File: cppad/speed/sparse_evaluate.hpp

</body>
</html>
