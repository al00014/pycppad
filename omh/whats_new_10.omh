$begin whats_new_10$$ 
$dollar @$$
$spell
	adfun
	cygwin
	tarball
	inplace
	sys
	numpy
	py
	CppAD
	pycppad
	cppad
$$

$section Extensions, Bug Fixes, and Changes During 2010$$

$head Previous Years$$
$children%
	omh/whats_new_09.omh
%$$
$table
$tref whats_new_09$$
$tend

$head 12-12$$
The $cref/independent(x)/independent/$$ 
and $cref/adfun(x,y)/adfun/$$ functions 
require the elements of $icode x$$ and $icode y$$ to all have
the same type.
If this was not the case, $code pycppad$$ might crash with out
a useful error message.
This has been fixed.

$head 12-05$$
First version that works (and installs properly) under MS windows using the 
$href%www.cygwin.com%cygwin%$$ system; see special 
pycppad instructions for installing under
$cref/cygwin/install/Building/Cygwin/$$.

$head 11-30$$
Upgraded from using $code cppad-20100101.2$$ to
$code cppad-20100101.5$$.
This fixes a problem when installing pycppad with version 1.44.0 of
$href%http://www.boost.org/doc/libs/1_44_0/libs/python/doc/index.html%
	boost-python
%$$.

$head 03-18$$
The upstream tarball for CppAD was missing from
The $cref/install/$$ process was failing because the upstream tarball
was missing from
$href|http://www.coin-or.org/download/source/CppAD/|$$.
This has been fixed, and a newer upstream release has been used.

$head 02-10$$
$list number$$
Added $code --inplace$$ to the
$cref/optimized/install/Building/Optimized/$$ build instructions.
Improved the $cref/install/install/Installing/$$ instructions
and the discussion of the
$cref/python path/install/Python Path/$$.
$lnext
Changes $code exit$$ to $code sys.exit$$ in 
$cref/test_example.py/install/Testing/$$
and $code test_more.py$$ (required on some systems).
$lnext
Fixed the $cref/ad_unary.py/$$ example so it displays the correct source
code and changed $code all$$ to $code numpy.all$$ in that example
(required on some systems).
$lend

$head 01-31$$
Add the $cref/abort_recording/$$ function.

$head 01-30$$
Change $code setup.py$$ do that it patches the CppAD distribution
(this fixes a problem with the 
$cref/optimized/install/Building/Optimized/$$ build). 

$head 01-29$$
Added the python ODE solver $cref/runge_kutta_4/$$
which can be used with `smart' floating point types
(e.g., AD types).

$head 01-28$$
Upgraded from using $code cppad-20090909.0$$ to
$code cppad-20100101.0$$.


$end
